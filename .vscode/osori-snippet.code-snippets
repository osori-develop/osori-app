{
  // Place your snippets for typescript here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:

  "Print to console": {
    "prefix": "log",
    "body": ["console.log('$1');", "$2"],
    "description": "Log output to console"
  },
  "snippet-state": {
    "prefix": "use-state",
    "body": ["const [$1, $2] = useState<$3>($4);"],
    "description": ""
  },
  "snippet-tsx": {
    "prefix": "use-tsx",
    "body": [
      "import React from 'react';",
      "",
      "export default () => {",
      "\tconst { theme } = useTheme();",
      "\n\treturn (",
      "\t\t\t<$1>",
      "\t\t\t</$1>",
      "\t\t);",
      "\t};"
    ],
    "description": ""
  },
  "snippet-interfaceProps": {
    "prefix": "use-props",
    "body": ["interface Props {", "\t$1", "}"],
    "description": ""
  },

  "snippet-cmpnt": {
    "prefix": "use-cmpnt",
    "body": [
      "interface $1Props {",
      "}",
      "const $1 = ({} : $1Props) => {",
      "\n\treturn (",
      "\t\t\t<$2>$3",
      "\t\t\t</$2>",
      "\t\t);",
      "\t};"
    ],
    "description": ""
  },

  "snippet-hook": {
    "prefix": "use-hook",
    "body": [
      "import { useState, useEffect} from 'react';",
      "",
      "interface Use$1Output {",
      "}",

      "export const use$1 = (): Use$1Output => {",
      "\t$2",
      "\treturn {",

      "\t};",
      "};"
    ],
    "description": ""
  }
}
